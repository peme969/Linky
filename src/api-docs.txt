# Linky! Developer API

Serverless link shortener with auth, expiration, optional password-protection, and an admin view—backed by Workers KV.

## Base URL

```
https://link.peme969.dev
```

## Auth model (important)

- All `GET|POST|DELETE /api/*` routes require:

```
Authorization: Bearer <API_KEY>
```

The key is read from `env.URLs.API_KEY (or Workers KV) at runtime. Only `/api/auth` is exempt from the guard so you can test keys.
- Admin actions and visibility use a separate secret:

```
X-Super-Secret: <ADMIN_KEY>
```

Used to see private links on `/api/links` and to delete slugs.

---

## Create a link

`POST /api/create`

Create (or overwrite) a short link.

**Headers**

```
Authorization: Bearer <API_KEY>
Content-Type: application/json
X-Timezone: <IANA tz, e.g. America/Chicago>   # optional; defaults to UTC
```

**Body**

```json
{
  "url": "https://example.com",             // required
  "slug": "customAlias",                     // optional; 6-char random if omitted
  "expiration": "2025-08-20 03:30 PM",      // optional; format "yyyy-MM-dd hh:mm a"
  "password": "secret"                       // optional; enables password protection
}
```

- Expiration is parsed in the timezone provided by `X-Timezone` (else UTC). Format is exactly `"yyyy-MM-dd hh:mm a"`.
- If no expiration, link never expires.
- Default slugs are 6 random base36 chars.

**Response**

```json
{
  "success": true,
  "slug": "customAlias",
  "expirationInSeconds": 86400,             // null if no expiration
  "passwordProtected": true
}
```

---

## List links (admin-aware)

`GET /api/links`

Returns all **valid (non-expired)** links. Password-protected links are **hidden** unless you include the admin header.

**Headers**

```
Authorization: Bearer <API_KEY>
X-Super-Secret: <ADMIN_KEY>    # optional, reveals private links and their password (if stored)
```

- Private links are filtered out when `X-Super-Secret` does not match.
- Expired links are deleted server-side and omitted.

**Response (shape)**

```json
[
  {
    "slug": "abc123",
    "url": "https://example.com",
    "clicks": 5,
    "passwordProtected": false,
    "metadata": {
      "createdAt": "August 10, 2025 at 5:22 PM CDT",
      "formattedExpiration": "Never",
      "createdAtUtc": 1723338123456,
      "expiresAtUtc": null,
      "expirationInSeconds": null
    }
  }
]
```

- With `X-Super-Secret` and for password-protected links, a `"password": "<cleartext or null>"` field may be included (if the original password is still stored).
- Count of clicks is included per item.

---

## Delete a link (admin)

`DELETE /api/{slug}`

Deletes a short link by its slug.

**Headers**

```
Authorization: Bearer <API_KEY>
X-Super-Secret: <ADMIN_KEY>
```

**Response**

```json
{ "success": true }
```

> Note: The route is the slug itself after `/api/` (no JSON body). Example: `DELETE /api/abc123`.

---

## Check an API key

`GET /api/auth`

Quick key check.

**Headers**

```
Authorization: Bearer <API_KEY>
```

**Response**

```json
{ "success": true, "hasServerKey": true }
```

- `200 OK` if valid; `401 Unauthorized` if not. Field `hasServerKey` helps diagnose server config.

---

## Resolve a slug (public)

`GET /:slug` → 302 redirect to the original URL.

- If the link is **password-protected**:

    - `GET` returns an HTML unlock form.
    - You can also unlock via header: `X-Link-Password: <password>`.
    - Or submit the form: `POST /:slug` with form-data `password=<secret>`.
- On success, the click counter increments.
- If expired: `410 Gone`. If not found: `404 Not Found`.

### Password internals (FYI)

- If a plain password was stored, the first successful unlock converts it to a SHA-256 hash transparently.
- You can also pass `X-Link-Password` on the initial `GET` to unlock without the form.

---

## Headers you might need

- `Authorization: Bearer <API_KEY>` — required for all `/api/*` except `/api/auth`.
- `X-Super-Secret: <ADMIN_KEY>` — admin-only behaviors (list private links, delete).
- `X-Timezone: America/Chicago` — controls how the server parses/prints expiration times. Defaults to UTC.
- `X-Link-Password: <password>` — unlock a protected link on `GET /:slug`.

---

## Curl examples

**Create**

```bash
curl -sS https://link.peme969.dev/api/create \
  -H "Authorization: Bearer $API_KEY" \
  -H "Content-Type: application/json" \
  -H "X-Timezone: America/Chicago" \
  -d '{"url":"https://example.com","expiration":"2025-08-20 03:30 PM","password":"secret"}'
```

**List (public only)**

```bash
curl -sS https://link.peme969.dev/api/links \
  -H "Authorization: Bearer $API_KEY"
```

**List (include private + passwords)**

```bash
curl -sS https://link.peme969.dev/api/links \
  -H "Authorization: Bearer $API_KEY" \
  -H "X-Super-Secret: $ADMIN_KEY"
```

**Delete**

```bash
curl -sS -X DELETE https://link.peme969.dev/api/abc123 \
  -H "Authorization: Bearer $API_KEY" \
  -H "X-Super-Secret: $ADMIN_KEY"
```

**Auth check**

```bash
curl -i https://link.peme969.dev/api/auth \
  -H "Authorization: Bearer $API_KEY"
```

**Unlock via header**

```bash
curl -I https://link.peme969.dev/abc123 \
  -H "X-Link-Password: secret"
```
